// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  name      String?
  email     String?  @unique
  phone     String?  @unique
  password  String?
  ssoToken  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  teams     Team[]
}

model Team {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  members     User[]
}

model Plugin {
  id                 Int                      @id @default(autoincrement())
  name               String
  description        String?
  version            String
  url                String?
  installationStatus PluginInstallationStatus @default(PENDING)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  components PluginComponent[]
}

enum PluginInstallationStatus {
  PENDING
  INSTALLED
  FAILED
}

model PluginComponent {
  id          Int            @id @default(autoincrement())
  name        String
  description String?
  type        PluginType
  function    PluginFunction
  pluginId    Int
  enabled     Boolean        @default(false) // Whether the plugin is enabled

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  plugin Plugin @relation(fields: [pluginId], references: [id])
}

enum PluginType {
  FRONTEND
  BACKEND
}

enum PluginFunction {
  FILESTORAGE
}
